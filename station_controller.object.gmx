<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving_stations = false;
//1 is right, -1 is left
movement_direction = 1;
movement_speed = 10;
cooking = false;
next_food = "none";
//1 = spring rolls, 2 = spaghetti, 3 = pie, 4 = buffet
current_dish = 1;
current_stage = 0;
food_max_state = 0;
food_state = 0;
food_type = "none";
current_station = undefined;
next_station = undefined;
current_equipment = undefined;
next_equipment = undefined;
max_array_size = 10;
for(var i = 0; i &lt; max_array_size;i++){
    for(var j = 0; j &lt; 4; j++){
        food_array[i,j] = undefined;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next_item();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(moving_stations){
    current_station.x += (station_controller.movement_speed*station_controller.movement_direction);
    next_station.x += (station_controller.movement_speed*station_controller.movement_direction);
    current_equipment.x += (station_controller.movement_speed*station_controller.movement_direction);
    next_equipment.x += (station_controller.movement_speed*station_controller.movement_direction);
    if(next_station.x = 240){
        with(current_station){
            instance_destroy();
        }
        current_station = next_station;
        for(var i = 0;i &lt; array_height_2d(food_array);i++){
            if(food_type = "beans"){
                for(var j = 0; j &lt; 4;j++){
                    if(food_array[i,j] = undefined){
                        continue;
                    }
                    with(food_array[i,j]){
                        instance_destroy();
                    }
                    food_array[i,j] = undefined;
                }
            }else{
                if(food_array[i,0] = undefined){
                    continue;
                }
                with(food_array[i,0]){
                    instance_destroy();
                }
                food_array[i,0] = undefined;
            }
        }
        if(next_food != "none"){
            generate_food(next_food);
            next_food = "none";
        }
        moving_stations = false;
    }
}
if(food_type != "none" &amp;&amp; food_state = 0 &amp;&amp; !moving_stations &amp;&amp; cooking = true){
    instance_create(240,160,perfect_cook);
    cooking = false;
    alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room = cooking_room){
    if(overall_game_info.current_dish = 1){
        first_station_generate(1);
        generate_food("beans");
    }else if(overall_game_info.current_dish = 2){
        first_station_generate(2);
        generate_food("beans");
    }else if(overall_game_info.current_dish = 3){
        first_station_generate(3);
        generate_food("frying_springroll");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(food_type = "carrot"){
    if(food_state = 12){
        draw_sprite_part(carrot_full, 0, 0, 0, 480, 320, 0, 0);
    }else if(food_state = 11){
        draw_sprite_part(carrot_full, 0, 0, 0, 480, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 350, 140);
    }else if(food_state = 10){
        draw_sprite_part(carrot_full, 0, 0, 0, 340, 320, 0, 0);
    }else if(food_state = 9){
        draw_sprite_part(carrot_full, 0, 0, 0, 340, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 320, 135);
    }else if(food_state = 8){
        draw_sprite_part(carrot_full, 0, 0, 0, 300, 320, 0, 0);
    }else if(food_state = 7){
        draw_sprite_part(carrot_full, 0, 0, 0, 300, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 275, 128);
    }else if(food_state = 6){
        draw_sprite_part(carrot_full, 0, 0, 0, 260, 320, 0, 0);
    }else if(food_state = 5){
        draw_sprite_part(carrot_full, 0, 0, 0, 260, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 230, 126);
    }else if(food_state = 4){
        draw_sprite_part(carrot_full, 0, 0, 0, 220, 320, 0, 0);
    }else if(food_state = 3){
        draw_sprite_part(carrot_full, 0, 0, 0, 220, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 190, 126);
    }else if(food_state = 2){
        draw_sprite_part(carrot_full, 0, 0, 0, 180, 320, 0, 0);
    }else if(food_state = 1){
        draw_sprite_part(carrot_full, 0, 0, 0, 180, 320, 0, 0);
        draw_sprite(carrot_injury, 0, 150, 126);
    }
}else if(food_type = "beans"){
    if(food_state = 10){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 480, 320, 0, -40+(30*i));
        }
    }else if(food_state = 9){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 480, 320, 0, -40+(30*i));
            draw_sprite(bean_injury, 0, 335, 85+(30*i));
        }
    }else if(food_state = 8){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 330, 320, 0, -40+(30*i));
        }
    }else if(food_state = 7){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 330, 320, 0, -40+(30*i));
            draw_sprite(bean_injury, 0, 300, 85+(30*i));
        }
    }else if(food_state = 6){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 300, 320, 0, -40+(30*i));
        }
    }else if(food_state = 5){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 300, 320, 0, -40+(30*i));
            draw_sprite(bean_injury, 0, 255, 85+(30*i));
        }
    }else if(food_state = 4){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 250, 320, 0, -40+(30*i));
        }
    }else if(food_state = 3){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 250, 320, 0, -40+(30*i));
            draw_sprite(bean_injury, 0, 205, 85+(30*i));
        }
    }else if(food_state = 2){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 200, 320, 0, -40+(30*i));
        }
    }else if(food_state = 1){
        for(var i = 0; i &lt; 4; i++){
            draw_sprite_part(bean_full, 0, 0, 0, 200, 320, 0, -40+(30*i));
            draw_sprite(bean_injury, 0, 160, 85+(30*i));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//peaches and cream approx 97bpm
//spiced pear approx 81bpm
//bass boss approx 140bpm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_up)){
    if(station_controller.food_type = "springroll"){
        if(station_controller.food_state &lt;= 14 &amp;&amp; station_controller.food_state &gt; 11){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                station_controller.food_state = 11;
            }else{
                station_controller.food_state -= temp_num;
            }
        }else if(station_controller.food_state &lt;= 5 &amp;&amp; station_controller.food_state &gt; 0){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                station_controller.food_state = 0;
            }else{
                station_controller.food_state -= temp_num;
            }
        }
    }else if(station_controller.food_type = "frying_springroll"){
        if(station_controller.food_state &lt;= 12 &amp;&amp; station_controller.food_state &gt; 10){
            temp_num = check_closest_beat();
            if(temp_num = 1){
                springroll_frying_object.random_y_small = true;
                springroll_frying_object.move_direction = -1;
                station_controller.food_state -= temp_num;
            }else if(temp_num = 2){
                springroll_frying_object.random_y_large = true;
                springroll_frying_object.move_direction = -1;
                station_controller.food_state -= temp_num;
            }
            if(station_controller.food_state - temp_num &lt; 10){
                station_controller.food_state = 10;
            }
        }else if(station_controller.food_state &lt;= 6 &amp;&amp; station_controller.food_state &gt; 0){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                if(station_controller.food_state - temp_num &lt; 1){
                    station_controller.food_state = 0;
                }else if(station_controller.food_state - temp_num &lt; 3){
                    station_controller.food_state = 2;
                }else if(station_controller.food_state - temp_num &lt; 5){
                    station_controller.food_state = 4;
                }
            }else{
                station_controller.food_state -= temp_num;
            }
        }
    }
}else if(keyboard_check_pressed(ord('D')) || keyboard_check_pressed(vk_right)){
    if(station_controller.food_type = "springroll"){
        if(station_controller.food_state &lt;= 11 &amp;&amp; station_controller.food_state &gt; 8){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                station_controller.food_state = 8;
            }else{
                station_controller.food_state -= temp_num;
            }
        }
    }else if(station_controller.food_type = "frying_springroll"){
        if(station_controller.food_state &gt; 30 &amp;&amp; station_controller.food_state &lt;= 34){
            temp_num = check_closest_beat();
            if(station_controller.food_state - temp_num &lt; 31){
                station_controller.food_state = 30;
                temperature_knob_object.goal_location = 5;
                temperature_knob_object.moving_knob = true;
            }else if(temp_num != 0){
                station_controller.food_state -= temp_num;
                temperature_knob_object.goal_location += temp_num;
                temperature_knob_object.moving_knob = true;
            }
        }else if(station_controller.food_state &lt;= 10 &amp;&amp; station_controller.food_state &gt; 8){
            temp_num = check_closest_beat();
            if(temp_num = 1){
                springroll_frying_object.random_x_small = true;
                springroll_frying_object.move_direction = 1;
                station_controller.food_state -= temp_num;
            }else if(temp_num = 2){
                springroll_frying_object.random_x_large = true;
                springroll_frying_object.move_direction = 1;
                station_controller.food_state -= temp_num;
            }
            if(station_controller.food_state - temp_num &lt; 8){
                station_controller.food_state = 8;
            }
        }
    }
}else if(keyboard_check_pressed(ord('A')) || keyboard_check_pressed(vk_left)){
    if(station_controller.food_type = "springroll"){
        if(station_controller.food_state &lt;= 8 &amp;&amp; station_controller.food_state &gt; 5){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                station_controller.food_state = 5;
            }else{
                station_controller.food_state -= temp_num;
            }
        }
    }else if(station_controller.food_type = "frying_springroll"){
        if(station_controller.food_state &lt;= 28 &amp;&amp; station_controller.food_state &gt; 20){
            temp_num = check_closest_beat();
            if(station_controller.food_state - temp_num &lt; 20){
                station_controller.food_state = 20;
            }else{
                station_controller.food_state -= temp_num;
            }
        }else if(station_controller.food_state &lt;= 14 &amp;&amp; station_controller.food_state &gt; 12){
            temp_num = check_closest_beat();
            if(temp_num = 1){
                springroll_frying_object.random_x_small = true;
                springroll_frying_object.move_direction = -1;
                station_controller.food_state -= temp_num;
            }else if(temp_num = 2){
                springroll_frying_object.random_x_large = true;
                springroll_frying_object.move_direction = -1;
                station_controller.food_state -= temp_num;
            }
            if(station_controller.food_state - temp_num &lt; 12){
                station_controller.food_state = 12;
            }
        }
    }
}else if(keyboard_check_pressed(ord('S')) || keyboard_check_pressed(vk_down)){
    if(station_controller.food_type = "frying_springroll"){
        if(station_controller.food_state &lt;= 30 &amp;&amp; station_controller.food_state &gt; 28){
            temp_num = check_closest_beat();
            if(station_controller.food_state - temp_num &lt; 29){
                station_controller.food_state = 28;
                fryingpan.appearing = true;
                oil_pour_object.appearing = true;
            }else{
                station_controller.food_state -= temp_num;
            }
        }else if(station_controller.food_state &lt;= 20 &amp;&amp; station_controller.food_state &gt; 14){
            temp_num = check_closest_beat();
            if(temp_num = 2){
                if(station_controller.food_state - temp_num &lt; 15){
                    station_controller.food_state = 14;
                }else if(station_controller.food_state - temp_num &lt; 17){
                    station_controller.food_state = 16;
                }else if(station_controller.food_state - temp_num &lt; 19){
                    station_controller.food_state = 18;
                }
            }else{
                station_controller.food_state -= temp_num;
            }
        }else if(station_controller.food_type = "frying_springroll"){
        if(station_controller.food_state &lt;= 8 &amp;&amp; station_controller.food_state &gt; 6){
            temp_num = check_closest_beat();
            if(temp_num = 1){
                springroll_frying_object.random_y_small = true;
                springroll_frying_object.move_direction = 1;
                station_controller.food_state -= temp_num;
            }else if(temp_num = 2){
                springroll_frying_object.random_y_large = true;
                springroll_frying_object.move_direction = 1;
                station_controller.food_state -= temp_num;
            }
            if(station_controller.food_state - temp_num &lt; 6){
                station_controller.food_state = 6;
            }
        }
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(240,160,perfect_cook);
//audio_play_sound(cream_and_sugar,0,0);
if(station_controller.moving_stations = false &amp;&amp; station_controller.cooking = true){
if(station_controller.food_type = "carrot"){
    temp_num = check_closest_beat();
    if(temp_num &gt; 0){
        audio_play_sound(knife_carrot,0,0);
    }else if(temp_num = 0){
        audio_play_sound(knife_miss,0,0);
    }
    if(temp_num = 2 &amp;&amp; station_controller.food_state%2 = 1){
        station_controller.food_state += 1;
    }
    station_controller.food_state -= temp_num;
    food_state = station_controller.food_state;
    if(temp_num &gt; 0){
    if(food_state &gt; 9){
        instance_create(365, 160, knife_cut);
    }else if(food_state &gt; 7){
        instance_create(335, 160, knife_cut);
    }else if(food_state &gt; 5){
        instance_create(290, 160, knife_cut);
    }else if(food_state &gt; 3){
        instance_create(245, 160, knife_cut);
    }else if(food_state &gt; 1){
        instance_create(205, 160, knife_cut);
    }else if(food_state &gt; -1){
        instance_create(165, 160, knife_cut);
    }
    }
}else if(station_controller.food_type = "beans"){
    temp_num = check_closest_beat();
    if(temp_num &gt; 0){
        audio_play_sound(knife_bean,0,0);
    }else if(temp_num = 0){
        audio_play_sound(knife_miss,0,0);
    }
    if(temp_num = 2 &amp;&amp; station_controller.food_state%2 = 1){
        station_controller.food_state += 1;
    }
    station_controller.food_state -= temp_num;
    food_state = station_controller.food_state;
    if(temp_num &gt; 0){
    if(food_state &gt; 7){
        instance_create(350, 160, knife_cut);
    }else if(food_state &gt; 5){
        instance_create(315, 160, knife_cut);
    }else if(food_state &gt; 3){
        instance_create(270, 160, knife_cut);
    }else if(food_state &gt; 1){
        instance_create(220, 160, knife_cut);
    }else if(food_state &gt; -1){
        instance_create(175, 160, knife_cut);
    }
    }
}else if(station_controller.food_type = "springroll" &amp;&amp; station_controller.food_state &gt; 14){
    temp_num = check_closest_beat();
    if(temp_num = 2 &amp;&amp; station_controller.food_state%2 = 1){
        station_controller.food_state += 1;
    }
    station_controller.food_state -= temp_num;
    if(station_controller.food_state = 19){
        station_controller.food_array[0,0].image_alpha = 1;
    }else if(station_controller.food_state = 18){
        station_controller.food_array[0,0].sprite_index = springroll_filling_hit;
        station_controller.food_array[0,0].image_index = 0;
        station_controller.food_array[0,0].image_alpha = 1;
    }
    if(station_controller.food_state = 17){
        station_controller.food_array[1,0].image_alpha = 1;
    }else if(station_controller.food_state = 16){
        station_controller.food_array[1,0].sprite_index = springroll_filling_hit;
        station_controller.food_array[1,0].image_index = 1;
        station_controller.food_array[1,0].image_alpha = 1;
    }
    if(station_controller.food_state = 15){
        station_controller.food_array[2,0].image_alpha = 1;
    }else if(station_controller.food_state = 14){
        station_controller.food_array[2,0].sprite_index = springroll_filling_hit;
        station_controller.food_array[2,0].image_index = 2;
        station_controller.food_array[2,0].image_alpha = 1;
    }
}
if(temp_num != 0){
with(station_controller){
if(food_state%2 != 1){
    if(food_type = "carrot"){
        food_array[(food_max_state - food_state)/2 - 1,0].fadingout = true;
        if(food_state = 0){
            food_array[6,0].fadingout = true;
        }
    }else if(food_type = "beans"){
        for(var i = 0; i &lt; 4; i++){
            food_array[(food_max_state - food_state)/2 - 1,i].fadingout = true;
        }
        if(food_state = 0){
            for(var j = 0; j &lt; 4; j++){
                food_array[4,j].fadingout = true;
            }
        }
    }
}
}
}
}
/*
for(var i = 0; i &lt; 7; i++){
    station_controller.food_array[i].y += irandom(20);
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
